stages:
  - lint
  - test
  - pypi-release
  - gitlab-release

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

default:
  image: python:3.11
  before_script:
    - pip install hatch
  cache:
    paths:
      - .cache/pip

Lint and Format:
  stage: lint
  script:
    - hatch fmt --check
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: always
  allow_failure: true

Test on Python 3.11:
  image: python:3.11
  stage: test
  script:
    - hatch run +py=3.11 test:test --junit-xml=pytest-311.xml
  artifacts:
    when: always
    paths:
      - pytest-311.xml
    reports:
      junit: pytest-311.xml
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: always

Test on Python 3.9:
  image: python:3.9
  stage: test
  script:
    - hatch run +py=3.9 test:test --junit-xml=pytest-39.xml
  artifacts:
    when: always
    paths:
      - pytest-39.xml
    reports:
      junit: pytest-39.xml
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: always

Release to PyPI:
  stage: pypi-release
  script:
    - hatch build
    - echo $MOSAIK_PYPI_USER
    - hatch publish -u $MOSAIK_PYPI_USER -a $MOSAIK_PYPI_PASSWORD
    - echo PACKAGE_VERSION=$(hatch version) > version.env
  rules:
    - if: $CI_COMMIT_TAG
  artifacts:
    reports:
      dotenv: version.env

Create GitLab release:
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  stage: gitlab-release
  before_script: []
  script:
    - echo "Creating GitLab release for $PACKAGE_VERSION"
  needs:
    - job: Release to PyPI
      artifacts: true
  release:
    tag_name: $CI_COMMIT_TAG
    description: $CI_COMMIT_TAG_MESSAGE
    assets:
      links:
        - name: PyPI download page
          url: https://pypi.org/project/mosaik-pandapower-2/$PACKAGE_VERSION/#files
          link_type: package
  cache:
    paths: []
