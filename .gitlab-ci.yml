variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  test_release_pattern: /dev/

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_REF_PROTECTED == "true"

default:
  image: python:3.11
  before_script:
    - pip install hatch
  cache:
    paths:
      - .cache/pip

Lint and Format:
  script:
    - hatch fmt --check
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: always

Test/Python 3.11:
  image: python:3.11
  script:
    - hatch run +py=3.11 test:test --junit-xml=pytest-311.xml --cov --cov-report xml
  artifacts:
    when: always
    paths:
      - pytest-311.xml
    reports:
      junit: pytest-311.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: always

Test/Python 3.9:
  image: python:3.9
  script:
    - hatch run +py=3.9 test:test --junit-xml=pytest-39.xml
  artifacts:
    when: always
    paths:
      - pytest-39.xml
    reports:
      junit: pytest-39.xml
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: always

.release:
  script:
    - hatch build
    - hatch publish -u $MOSAIK_PYPI_USER -a $PYPI_TOKEN -r $REPO |& tee hatch.out
    - PACKAGE_URL = $(tail -n 1 hatch.out)
    - touch pypi.env
    - echo "PACKAGE_VERSION=$(hatch version)" >> pypi.env
    - echo "PACKAGE_URL=$PACKAGE_URL" >> pypi.env
  artifacts:
    reports:
      dotenv: pypi.env
  cache:
    paths:
      - .cache/pip
    policy: pull

PyPI release:
  extends: .release
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_TAG !~ $test_release_pattern
  variables:
    PYPI_TOKEN: $MOSAIK_PYPI_PASSWORD
    REPO: main

Test-PyPI release:
  extends: .release
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_TAG =~ $test_release_pattern
  variables:
    PYPI_TOKEN: $MOSAIK_TEST_PYPI_TOKEN
    REPO: test

GitLab release:
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_TAG !~ $test_release_pattern
  before_script: []
  script:
    - echo "Creating GitLab release for $PACKAGE_VERSION"
  needs:
    - job: PyPI release
      artifacts: true
  release:
    tag_name: $CI_COMMIT_TAG
    description: $CI_COMMIT_TAG_MESSAGE
    assets:
      links:
        - name: PyPI download page
          url: $PACKAGE_URL#files
          link_type: package
  cache:
    paths: []
